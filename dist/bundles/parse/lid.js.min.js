/*! lid.js 14-07-2013 */
!function(){"use strict";function a(){var a={_count:0,_hash:{},_lastKey:null,gen:function(b){return"string"!=typeof b&&(b=""),b+""+a._count++},_genKey:function(){return"_lidk"+a._count++},_register:function(b,c){a._hash[b]=c},link:function(b,c){var d,e=b;if("boolean"==typeof b)b===!0?(d=a.gen(c),e=a._genKey(),a._register(e,d)):(e=a._lastKey,d=a._hash[e]);else{if("string"!=typeof b)throw new Error("Boolean or String expected as link key");e=b,b in a._hash?d=a._hash[b]:(d=a.gen(c),a._register(b,d))}return a._lastKey=e,d},flush:function(){a._hash={},a._lastKey=null}};return a}var b=window;"function"==typeof define&&define.amd?define([],a):b.lid=a()}(),!function(){"use strict";function a(a){var b=a.parse=function(c,d){if("string"!=typeof c)throw new Error("lid parsing only operates on strings");d=d||{};var e={},f=b.settings;for(var g in f)f.hasOwnProperty(g)&&(e[g]=void 0!==d[g]?d[g]:f[g]);e.preFlush===!0&&a.flush();var h=c.replace(e.genReg,function(c,d){return a.gen.apply(a,b._getParams(d))}).replace(e.linkReg,function(c,d){return a.link.apply(a,b._getParams(d))});return e.postFlush===!0&&a.flush(),h};b._getParams=function(a){var b="return ["+a+"]";return new Function(b)()},b.settings={preFlush:!0,postFlush:!0,linkReg:/lid\(([\s\S]+?)\)/gi,genReg:/gid\(([\s\S]*?)\)/gi}}var b=window;"function"==typeof define&&define.amd?define(["../lid"],a):a(b.lid)}();